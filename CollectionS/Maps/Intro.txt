Map interface in java provides a way to store key-value pairs. It is not a part of collection framework. It is an interface that implements a map for storing the elements. It inherits AbstractMap class and implements Map interface.

working: 

elements of map interface are stored in key/value pairs. Keys are unique values associated with individual values. A map cannot contain duplicate keys and each key can map to at most one value.

keys        ----->      values
INR         ----->      "Indian Rupee"
USD         ----->      "US Dollar"
EUR         ----->      "Euro"
GBP         ----->      "Pound Sterling"

duplicate values are allowed. but duplicate keys are not allowed.

Map Interface implements below given 5 classes:
    1. HashMap
    2. LinkedHashMap
    3. TreeMap
    4. WeakHashMap
    5. EnumMap

Map Interface extends 3 other interfaces:
    1. SortedMap
    2. NavigableMap
    3. ConcurrentMap (thread safe)

Methods of Map:

Besides methods available in the Collection interface, the Map interface also includes the following methods:

1. put(K, V) - Inserts the association of a key K and a value V into the map. If the key is already present, the new value replaces the old value.
2. putAll() - Inserts all the entries from the specified map to this map.
3. putIfAbsent(K, V) - Inserts the association if the key K is not already associated with the value V.
4. get(K) - Returns the value associated with the specified key K. If the key is not found, it returns null.
5. getOrDefault(K, defaultValue) - Returns the value associated with the specified key K. If the key is not found, it returns the defaultValue.
6. containsKey(K) - Checks if the specified key K is present in the map or not.
7. containsValue(V) - Checks if the specified value V is present in the map or not.
8. replace(K, V) - Replace the value of the key K with the new specified value V.
9. replace(K, oldValue, newValue) - Replaces the value of the key K with the new value newValue only if the key K is associated with the value oldValue.
10. remove(K) - Removes the entry from the map represented by the key K.
11. remove(K, V) - Removes the entry from the map that has key K associated with value V.
12. keySet() - Returns a set of all the keys present in a map.
13. values() - Returns a set of all the values present in a map.
14. entrySet() - Returns a set of all the key/value mapping present in a map.